our python program sends HTTP requests to get the web page containing the data about the
most active stocks on NYSE from https://finance.yahoo.com/most-active, checks HTTP status
for success or failure and download the webpage locally(Sometimes, the website site may block non-
browser requests by checking for the User-Agent and encounter 429 status - too many requests. To
resolve, you can mimic as a real browser to download the webpage, use the attached bash script to
download webpage locally in case of failure). If the HTTP request fails to get the page, terminate the
program.
From the downloaded webpage, then extract the data, add the data in your mongodb database as
new mongodb documents. The program only saves the following 5 fields/columns into the
database: Symbol, Name, Price, Change, and Volume (only the data in the current page).
Then, run the PHP script to read the data out from the database and check the HTML page
generated by the PHP script. You can use php to run the script on the command line first, so you
can see error messages if the script contains bugs. Only after you have confidence that it runs
correctly, “deploy” it and test it in a web server (more instructions below).
The PHP script connects to and queries your mongodb database to obtain the data saved earlier
by the python program. With the data, it generates a web page containing a table. The table should
allow users to sort the data by clicking the column title on the header row, as shown with the
screenshots below (one sorted based on Index, and the other sorted based on Symbol).
Set up and use your own mongodb server and web server (Instructions to setup tools and li